

Parameters:
  WebBucketName:
    Type: String
    Description: The name of the S3 bucket to create for webhosting
  UserPoolName:
    Type: String
    Description: The name of the Cognito User Pool

Resources:
  WebBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref WebBucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  WebHostBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebBucketName
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${WebBucketName}/*
  BlogAdminUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Ref UserPoolName
      UsernameAttributes:
      - "email"
  BlogAdminPoolClientApp:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: BlogAdmin
      UserPoolId: !Ref BlogAdminUserPool

Outputs:
  SeeBlogAdminUserPoolId:
    Value: !Ref BlogAdminUserPool
  SeeBlogAdminUserPoolArn:
    Value: !GetAtt BlogAdminUserPool.Arn
  SeeBlogAdminAppClientId:
    Value: !Ref BlogAdminPoolClientApp
  SeeBlogWebBucketName:
    Value: !Ref WebBucketName
