
service: seehund-blog-api-${env:SEEHUND_BLOG}

custom:
  webpack: './webpack.api.config.js'
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: 'dev'
  region: ${opt:region, 'us-east-1'}
  environment:
    POSTS_TABLE: ${env:SEEHUND_BLOG}-postsTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, 'us-east-1'}:*:*"
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::*/*"

plugins:
  - serverless-webpack

functions:
  build_site:
    handler: build.site
    events:
      - http:
          path: build
          method: post
          cors: true
  create_post:
    handler: posts.create
    events:
      - http:
          path: posts
          method: post
          cors: true
  show_post:
    handler: posts.show
    events:
      - http:
          path: posts/{id}
          method: get
  list_posts:
    handler: posts.list
    events:
      - http:
          path: posts
          method: get
  update_post:
    handler: posts.update
    events:
      - http:
          path: posts/{id}
          method: put
          cors: true
  delete_post:
    handler: posts.destroy
    events:
      - http:
          path: posts/{id}
          method: delete
          cors: true

# you can add CloudFormation resource templates here
resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:SEEHUND_BLOG}-postsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    PostsTableIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: PostsTable
      Properties:
        PolicyName: lambda-poststable
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:*:table/${env:SEEHUND_BLOG}-postsTable
        Roles:
          - Ref: IamRoleLambdaExecution


